setwd("C:/Users/paul/Documents/DataScience/MSDS-Capstone")
SQ <- read.csv("SQ-Data.csv", header = TRUE)
summary(SQ)
head(SQ)
tail(SQ)
str(SQ)
SQ <- mutate(SQ, MonthYear = paste(year(Date),formatC(month(Date), width = 2, flag = "0")))
library(timeSeries)
library(timeDate)
library(timeSeries)
library(MASS)
library(ggplot2)
library(TSLM)
load(TimeSeriesLmweek7.RData)
load('TimeSeriesLmweek7.RData')
ls()
myfunc
load("TimeSeriesLmweek.rdata", verbose=TRUE)
load("TimeSeriesLmweek.rdata', verbose=TRUE)
)
)
)
))
'')
F
setwd("C:/Users/paul/Documents/DataScience/MSDS-Capstone")
library(MASS)
library(timeDate)
library(timeSeries)
library(ggplot2)
library(dplyr)
library(stats)
library(dplyr)
library(tslm)
SQ <- read.csv("SQ-Data.csv", header = TRUE)
head(SQ)
tail(SQ)
str(SQ)
SQ <- mutate(SQ, MonthYear = paste(year(Date),formatC(month(Date), width = 2, flag = "0")))
library(lubridate)
library(base)
library(lubridate)
SQ <- mutate(SQ, MonthYear = paste(year(Date),formatC(month(Date), width = 2, flag = "0")))
SQ <- mutate(SQ, Yearday = paste(year(Date), formatC(month(Date), width = 2, flag = "0"),formatC(day(Date), width = 2, flag = "0")))
SQ <- mutate(SQ, Week = week(Date))
SQ <- mutate(SQ, Year = year(Date))
SQ$Year <- as.factor(SQ$Year)
str(SQ)
SQ$Date <- strptime(SQ$Date, "%Y-%m-%d" )
SQ$Date <- as.POSIXct(SQ$Date)
str(SQ)
head(SQ)
SQ_Monthly <- aggregate(SQ$SQ, by = list(SQ$MonthYear), FUN = function(x) mean(x, na.rm=T))
plot(My_SQ_Price)
My_SQ_Price <- ts(SQ_Monthly$x, frequency=12, start = c(2018, 03), end = c(2022, 03))
plot(My_SQ_Price)
SQ_TimeSr <- data.frame(SQPrice = My_SQ_Price, as.numeric(time(My_SQ_Price)))
names(SQ_TimeSr) <- c("SQPrice", "time")
SQ_TS_Lm_Model <- tslm(SQPrice~season+trend,SQ_TimeSr)
library(forecast)
SQ_TS_Lm_Model <- tslm(SQPrice~season+trend,SQ_TimeSr)
SQ_Price_Forecast <- forecast(SQ_TS_Lm_Model,h=5)
plot(SQ_Price_Forecast)
SQ_Price_Forecast_h1 <- forecast(SQ_TS_Lm_Model,h=1)
plot(SQ_Price_Forecast_h1)
My_SQ_Price <- ts(SQ_Monthly$x, frequency=12, start = c(2018, 03), end = c(2020, 03))
plot(My_SQ_Price)
SQ_TimeSr <- data.frame(SQPrice = My_SQ_Price, as.numeric(time(My_SQ_Price)))
names(SQ_TimeSr) <- c("SQPrice", "time")
SQ_TS_Lm_Model <- tslm(SQPrice~season+trend,SQ_TimeSr)
SQ_Price_Forecast <- forecast(SQ_TS_Lm_Model,h=5)
plot(SQ_Price_Forecast)
SQ_Price_Forecast_h1 <- forecast(SQ_TS_Lm_Model,h=1)
plot(SQ_Price_Forecast_h1)
install.packages("devtools")
library(devtools)
install.packages("debugme")
library(debugme)
library(base)
library(debugme)
library(devtools)
git remote add origin https://github.com/xuanphong/SQPrediction
library(foreign)
setwd
setwd("C:/Users/paul/Documents/DataScience/MSDS-Capstone")
SQ <- read.csv("SQ-Data.csv", header = TRUE)
head(SQ)
tail(SQ)
str(SQ)
library(base)
library(stats)
library(dplyr)
library(timeDate)
library(timeSeries)
library(MASS)
SQ <- mutate(SQ, MonthYear = paste(year(Date),formatC(month(Date), width = 2, flag = "0")))
library(lubridate)
library(base)
library(lubridate)
SQ <- mutate(SQ, MonthYear = paste(year(Date),formatC(month(Date), width = 2, flag = "0")))
SQ <- mutate(SQ, Yearday = paste(year(Date), formatC(month(Date), width = 2, flag = "0"),formatC(day(Date), width = 2, flag = "0")))
SQ <- mutate(SQ, Week = week(Date))
SQ <- mutate(SQ, Year = year(Date))
SQ$Year <- as.factor(SQ$Year)
SQ$Date <- strptime(SQ$Date, "%Y-%m-%d" )
SQ$Date <- as.POSIXct(SQ$Date)
str(SQ)
head(SQ)
SQ_Monthly <- aggregate(SQ$SQ, by = list(SQ$MonthYear), FUN = function(x) mean(x, na.rm=T))
My_SQ_Price <- ts(SQ_Monthly$x, frequency=12, start = c(2018, 03), end = c(2019, 12))
plot(My_SQ_Price)
SQ_TimeSr <- data.frame(SQPrice = My_SQ_Price, as.numeric(time(My_SQ_Price)))
names(SQ_TimeSr) <- c("SQPrice", "time")
SQ_TS_Lm_Model <- tslm(SQPrice~season+trend,SQ_TimeSr)
library(forecast)
SQ_TS_Lm_Model <- tslm(SQPrice~season+trend,SQ_TimeSr)
SQ_Price_Forecast <- forecast(SQ_TS_Lm_Model,h=5)
plot(SQ_Price_Forecast)
SQ_Price_Forecast_h1 <- forecast(SQ_TS_Lm_Model,h=1)
plot(SQ_Price_Forecast_h1)
plot(SQ_Price_Forecast)
save(list="bf_str", file="TimeSeriesRegression.R")
savehistory("~/DataScience/MSDS-Capstone/SQPrediction/TimeSeriesRegression.Rhistory")
